{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAe/C,OACC,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAjBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,QCLZG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEvC,OACC,sBAAKC,UAAU,yCAAf,UACC,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPMK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,iDACgCO,UAAUF,GAD1C,+DAECG,MAAMR,GAFP,cAEhBS,EAFgB,gBAGDA,EAASC,OAHR,uBAGfC,EAHe,EAGfA,KAEDC,EAAOD,EAAKE,KAAK,SAACC,GAAS,IAAD,EAC/B,MAAO,CACNhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATd,kBAafY,GAbe,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACfrB,mBAAS,CAClC2B,KAAM,GACNO,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAgBzC,OAVAC,qBAAU,WACTjB,EAAQC,GAAUiB,MAAK,SAACC,GACvBH,EAAS,CACRT,KAAMY,EACNL,SAAS,SAIT,CAACb,IAEGc,EDbyBK,CAAanB,GAAhCU,EAFyB,EAE/BJ,KAAcO,EAFiB,EAEjBA,QAErB,OACC,qCAEC,oBAAIjB,UAAU,oCAAd,SAAmDI,IAElDa,GAAW,mBAAGjB,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAGEc,EAAOF,KAAK,SAACC,GAAD,OACX,cAAC,EAAD,eAEKA,GADCA,EAAIhB,aEgBD2B,EAhCM,WAAM,MAEUzC,mBAAS,CAAC,cAFpB,mBAEnB0C,EAFmB,KAEP3C,EAFO,KAS1B,OACC,qCACC,iDACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAIA,6BAEC2C,EAAWb,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAECA,SAAUA,GADLA,Y,MCpBXsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f48afa18.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\t\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategorias(categories => [inputValue, ...categories]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategorias: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=5Aur2asApFfGBynHWjHEVbAzIUjLAKK5`\r\n\tconst response = await fetch(url);\r\n\tconst {data} = await response.json();\r\n\r\n\tconst gifs = data.map( (img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url\r\n\t\t}\r\n\t});\r\n\r\n\treturn gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\tconst {data: images, loading} = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map( (img) => \r\n\t\t\t\t\t\t<GifGridItem\r\n\t\t\t\t\t\t\tkey={img.id}\r\n\t\t\t\t\t\t\t{...img}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) => {\t\t\t\t\r\n\t\t\tsetState({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t}\r\n\t\t);\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\t// const categorias = [ 'One Punch', 'Samurai X', 'Dragon Ball'];\r\n\tconst [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \t// setCategorias([...categorias, 'Nueva Categoria']);\r\n\t// \tsetCategorias(categories => [...categories, 'Nueva Categoria']);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp!!!</h2>\r\n\t\t\t<AddCategory setCategorias={setCategorias} />\r\n\r\n\t\t\t<hr />\r\n\r\n\t\t\t{/* <button onClick={handleAdd}>Add Category</button> */}\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\tcategorias.map((category) => (\r\n\t\t\t\t\t<GifGrid\r\n\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}